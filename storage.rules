rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 5 * 1024 * 1024; // 5MB max
    }
    
    function isValidPath() {
      return request.resource.name.matches('^(clients|products)/[^/]+$');
    }

    // Client images
    match /clients/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImage() && isValidPath();
    }

    // Product images
    match /products/{imageId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImage() && isValidPath();
    }
  }
} 